generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  role        role[]
}

model headcount_request {
  id             String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status         String      @db.VarChar(255)
  role_id        String      @db.Uuid
  stakeholder_id String      @db.Uuid
  created_at     DateTime    @default(now()) @db.Timestamp(6)
  updated_at     DateTime    @default(now()) @db.Timestamp(6)
  role           role        @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  stakeholder    stakeholder @relation(fields: [stakeholder_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model role {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title             String              @db.VarChar(255)
  company_id        String              @db.Uuid
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  headcount_request headcount_request[]
  company           company             @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  stakeholder       stakeholder[]
}

model stakeholder {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String              @db.Uuid
  role_id           String              @db.Uuid
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  headcount_request headcount_request[]
  role              role                @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user              user                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  company     company[]
  stakeholder stakeholder[]
}
